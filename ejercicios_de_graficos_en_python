#primer ejecicio con grafica
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def gauss_seidel(A, b, x0, tol=1e-6, max_iter=100):
    n = len(A)
    x = x0.copy()
    
    for _ in range(max_iter):
        x_new = np.zeros_like(x)
        for i in range(n):
            x_new[i] = (b[i] - np.dot(A[i, :i], x_new[:i]) - np.dot(A[i, i+1:], x[i+1:])) / A[i, i]
        
        if np.linalg.norm(x_new - x) < tol:
            break
        
        x = x_new
    
    return x

A = np.array([[10, -1, 2],
              [-1, 11, -1],
              [2, -1, 10]])
b = np.array([6, 25, -11])
x0 = np.array([0, 0, 0])

solucion = gauss_seidel(A, b, x0)
print("Solución usando el método de Gauss-Seidel:", solucion)

# Crear la figura 3D
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Coordenadas de los puntos
x_coords = np.array([0, 1, 2])
y_coords = np.array(solucion)

# Generar las barras
ax.bar(x_coords, y_coords, zs=0, zdir='y', alpha=0.8)

# Etiquetas de los ejes
ax.set_xlabel('Variable')
ax.set_ylabel('Valor')
ax.set_zlabel('')

# Título del gráfico
plt.title('Solución usando el método de Gauss-Seidel')

plt.show()
